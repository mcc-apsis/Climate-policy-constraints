#   ungroup()
#### change the signs on the data 1 is more constrained, 0 is less
# ch <- ch %>%
#   mutate(democracy_electoral_vdem=-democracy_electoral_vdem) %>%
#   mutate(corruption_public_vdem=-corruption_public_vdem) %>%
#   mutate(trust_last=-trust_last)
#### Give nicer names
### histograms ###
gather(ch,key,value,risk$vars) %>%
ggplot(.,aes(x=value)) +
geom_histogram(bins=20) +
facet_wrap(. ~ key,scales="free") +
theme(axis.title = element_blank())
### correlation plots ###
library(ggcorrplot)
corr_data <- round(cor(ch %>% select(risk$vars),method="spearman",use="complete.obs"),2)
ggcorrplot(corr_data,type="upper",
ggtheme = ggplot2::theme_gray,
colors = c("#6D9EC1", "white", "#E46726"),lab=TRUE)
rm(corr_data)
library(cluster)
pc <- ch %>%
filter_at(vars(risk$vars),all_vars(!is.na(.))) %>%
column_to_rownames(var = "Country")
View(pc)
comps <- prcomp(pc %>% select(risk$vars),scale.=TRUE) # calculate principal components; Choose whether to scale
screeplot(comps, type="lines",col=3)
summary_pca <- rbind(
SD = sqrt(comps$sdev^2),
Proportion = comps$sdev^2/sum(comps$sdev^2),
Cumulative = cumsum(comps$sdev^2 / sum(comps$sdev^2))
) %>%
rbind(.,comps$rotation)
kable(summary_pca, format = "html", caption="PCA analysis",digits=2) %>%
kable_styling()
scree_data <- comps$x[,1:4]
wss <- (nrow(scree_data)-1)*sum(apply(scree_data,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(scree_data,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
clusters <- pam(comps$x[,1:5],5)
pc <- cbind(pc,cluster=clusters$cluster) ### bind clusters to dataset
View(pc)
pc$cluster <- as.factor(clusters$cluster) ### convert to factor
rm(clusters,i,wss)
rm(scree_data,summary_pca)
View(pc)
autoplot(comps,loadings=TRUE,loadings.label=TRUE,data=pc,label=TRUE,colour='cluster')
mapdata <- left_join(world,pc,by=c("iso"="ISO"))
mapdata %>%
ggplot(.) +
geom_polygon(aes(long,lat,group = paste(region,group),fill=cluster),color="white") +
theme_void() +
coord_fixed(1) +
scale_fill_discrete() +
labs(title="Typology")
View(mapdata)
View(ch)
View(pc)
mapdata <- left_join(world,pc %>% select(ISO,cluster),by=c("iso"="ISO"))
mapdata %>%
ggplot(.) +
geom_polygon(aes(long,lat,group = paste(region,group),fill=cluster),color="white") +
theme_void() +
coord_fixed(1) +
scale_fill_discrete() +
labs(title="Typology")
View(mapdata)
# mean 0, sd = 1
cluster_summary <- pc %>%
mutate_at(risk$vars,funs(norm=(.-mean(.))/sd(.))) %>%
select_at(vars(ISO,cluster,contains("norm"))) %>%
group_by(cluster)
cluster_summary <- gather(cluster_summary,key,value,-ISO,-cluster)
cluster_summary <- cluster_summary %>%
mutate(key = ifelse(grepl("trust_last_norm",key),"Trust",key)) %>%
mutate(key = ifelse(grepl("laws_norm",key),"Climate laws",key)) %>%
mutate(key = ifelse(grepl("subsidy_pretax_IMF_gdp_norm",key),"Fossil subsidies",key)) %>%
mutate(key = ifelse(grepl("rrents_oilgas_WB_norm",key),"Oil & gas rents",key)) %>%
mutate(key = ifelse(grepl("ene_share_coal_norm",key),"Coal share",key)) %>%
mutate(key = ifelse(grepl("democracy_electoral_vdem_norm",key),"Democracy",key)) %>%
mutate(key = ifelse(grepl("gov_corrupt_WGI_norm",key),"Corruption",key)) %>%
mutate(key = ifelse(grepl("climate_aware_norm",key),"Climate awareness",key)) %>%
mutate(key = ifelse(grepl("co2_terr_pc_norm",key),"CO2 emissions",key))
summarised <- spread(cluster_summary,key,value) %>%
group_by(cluster) %>%
summarise_all(list(mean))
summarised <- gather(summarised,key,value,-ISO,-cluster)
summarised$key <- as.factor(summarised$key)
summarised$key <- factor(summarised$key,levels(summarised$key)[c(1,9,5,6,8,4,7,3,2)])
summarised %>%
ggplot(.,aes(x=key,y=value,fill=cluster))+
geom_bar(stat='identity') +
ylim(-2.5,2.5) +
geom_point(data=cluster_summary,aes(x=key,y=value,colour=cluster),alpha=0.25)+
coord_flip() +
facet_grid(.~cluster) +
theme(legend.position="none",
axis.title.x=element_blank(),
axis.title.y=element_blank())
cluster_summary$key <- as.factor(cluster_summary$key)
cluster_summary$key <- factor(cluster_summary$key,levels(cluster_summary$key)[c(1,9,5,6,8,4,7,3,2)])
cluster_summary %>%
ggplot(.,aes(x=key,y=value,fill=cluster,color=cluster)) +
geom_hline(yintercept=0,size=1,color='#969696') +
geom_boxplot() +
coord_flip() +
facet_grid(.~cluster) +
ylim(-2,2) +
theme_bw() +
theme(legend.position="none",
axis.title.x=element_blank(),
axis.title.y=element_blank())
library(cluster)
pc <- ch %>%
filter_at(vars(risk$vars),all_vars(!is.na(.))) %>%
column_to_rownames(var = "Country")
comps <- prcomp(pc %>% select(risk$vars),scale.=TRUE) # calculate principal components; Choose whether to scale
screeplot(comps, type="lines",col=3)
summary_pca <- rbind(
SD = sqrt(comps$sdev^2),
Proportion = comps$sdev^2/sum(comps$sdev^2),
Cumulative = cumsum(comps$sdev^2 / sum(comps$sdev^2))
) %>%
rbind(.,comps$rotation)
kable(summary_pca, format = "html", caption="PCA analysis",digits=2) %>%
kable_styling()
#d_dist <- dist(as.matrix(comps$x[,1:4])) ### look at heirarchical clusters
#plot(hclust(d_dist))
######### scree plot
scree_data <- comps$x[,1:4]
wss <- (nrow(scree_data)-1)*sum(apply(scree_data,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(scree_data,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# clusters <- kmeans(comps$x[,1:3],5); ### choose no. clusters & no. PCs
# pc <- cbind(pc,cluster=clusters$cluster) ### bind clusters to dataset
# pc$cluster <- as.factor(clusters$cluster) ### convert to factor
clusters <- pam(comps$x[,1:5],6)
pc <- cbind(pc,cluster=clusters$cluster) ### bind clusters to dataset
pc$cluster <- as.factor(clusters$cluster) ### convert to factor
rm(clusters,i,wss)
rm(scree_data,summary_pca)
autoplot(comps,loadings=TRUE,loadings.label=TRUE,data=pc,label=TRUE,colour='cluster')
mapdata <- left_join(world,pc %>% select(ISO,cluster),by=c("iso"="ISO"))
mapdata %>%
ggplot(.) +
geom_polygon(aes(long,lat,group = paste(region,group),fill=cluster),color="white") +
theme_void() +
coord_fixed(1) +
scale_fill_discrete() +
labs(title="Typology")
autoplot(comps,loadings=TRUE,loadings.label=TRUE,data=pc,label=TRUE,colour='cluster')
# mean 0, sd = 1
cluster_summary <- pc %>%
mutate_at(risk$vars,funs(norm=(.-mean(.))/sd(.))) %>%
select_at(vars(ISO,cluster,contains("norm"))) %>%
group_by(cluster)
cluster_summary <- gather(cluster_summary,key,value,-ISO,-cluster)
cluster_summary <- cluster_summary %>%
mutate(key = ifelse(grepl("trust_last_norm",key),"Trust",key)) %>%
mutate(key = ifelse(grepl("laws_norm",key),"Climate laws",key)) %>%
mutate(key = ifelse(grepl("subsidy_pretax_IMF_gdp_norm",key),"Fossil subsidies",key)) %>%
mutate(key = ifelse(grepl("rrents_oilgas_WB_norm",key),"Oil & gas rents",key)) %>%
mutate(key = ifelse(grepl("ene_share_coal_norm",key),"Coal share",key)) %>%
mutate(key = ifelse(grepl("democracy_electoral_vdem_norm",key),"Democracy",key)) %>%
mutate(key = ifelse(grepl("gov_corrupt_WGI_norm",key),"Corruption",key)) %>%
mutate(key = ifelse(grepl("climate_aware_norm",key),"Climate awareness",key)) %>%
mutate(key = ifelse(grepl("co2_terr_pc_norm",key),"CO2 emissions",key))
summarised <- spread(cluster_summary,key,value) %>%
group_by(cluster) %>%
summarise_all(list(mean))
summarised <- gather(summarised,key,value,-ISO,-cluster)
summarised$key <- as.factor(summarised$key)
summarised$key <- factor(summarised$key,levels(summarised$key)[c(1,9,5,6,8,4,7,3,2)])
summarised %>%
ggplot(.,aes(x=key,y=value,fill=cluster))+
geom_bar(stat='identity') +
ylim(-2.5,2.5) +
geom_point(data=cluster_summary,aes(x=key,y=value,colour=cluster),alpha=0.25)+
coord_flip() +
facet_grid(.~cluster) +
theme(legend.position="none",
axis.title.x=element_blank(),
axis.title.y=element_blank())
cluster_summary$key <- as.factor(cluster_summary$key)
cluster_summary$key <- factor(cluster_summary$key,levels(cluster_summary$key)[c(1,9,5,6,8,4,7,3,2)])
cluster_summary %>%
ggplot(.,aes(x=key,y=value,fill=cluster,color=cluster)) +
geom_hline(yintercept=0,size=1,color='#969696') +
geom_boxplot() +
coord_flip() +
facet_grid(.~cluster) +
ylim(-2,2) +
theme_bw() +
theme(legend.position="none",
axis.title.x=element_blank(),
axis.title.y=element_blank())
laws <- read.csv('Data/CCLaws.csv',sep=',') %>%
mutate(Country=tolower(Country))
ISOs <- read.xlsx('C:/Users/lamw/Documents/SpiderOak Hive/Work/Code/R/.Place names and codes/output/ISOcodes.xlsx','alternative_names',encoding = 'UTF-8') %>%
mutate(alternative.name=tolower(alternative.name))
laws <- left_join(laws,ISOs %>% select(alternative.name,alpha.3),by=c("Country"="alternative.name")) %>%
select(Country,ISO=alpha.3,everything())
blarg <- laws %>%
filter(!grepl("Mitigation and adaptation",Framework)) %>%
filter(!grepl("mitigation and adaptation",Framework)) %>%
filter(!grepl("Mitigation",Framework)) %>%
filter(!grepl("Adaptation",Framework)) %>%
filter(!grepl("mitigation",Framework))
View(laws)
laws <- laws[grep("^Adaptation*$",laws$Framework,invert=TRUE),]
laws <- laws[grep("^(Adaptation)*$",laws$Categories,invert=TRUE),]
laws <- laws[grep("^(Adaptation; Institutions / Administrative arrangements)*$",laws$Categories,invert=TRUE),]
laws <- laws %>%
group_by(Country,ISO) %>%
summarise(laws=n())
save(laws,file='Data/laws.RData')
load('Data/laws.RData')
pe <- left_join(pe,laws %>% ungroup %>% select(-Country),by=c("ISO"="ISO"))
rm(laws)
rm(list = ls())
library(tidyverse)
library(xlsx)
##### import data from Matlab
file.copy('C:/Users/lamw/Documents/SpiderOak Hive/Work/Code/MATLAB/Data shop/Aggregation/Transition challenges/pe.xls','Data/',overwrite=TRUE)
pe<-read.xlsx('Data/pe.xls','data')
save(pe,file='Data/pe.RData')
#load('Data/pe.RData')
############### join IMF fossil subsidies ###############
subsidy_a <- read.xlsx('Data/IMF_Fuel_Subsidies_short.xlsx',sheetName='Pre-tax',startRow=2,encoding="UTF-8",check.names=FALSE)
ISOs <- read.xlsx('C:/Users/lamw/Documents/SpiderOak Hive/Work/Code/R/.Place names and codes/output/ISOcodes.xlsx',sheetName='alternative_names')
subsidy_a <- left_join(subsidy_a %>% mutate(Country=tolower(Country)),ISOs
,by=c("Country"="alternative.name")) %>%
select(alpha.3,everything()) %>%
filter(!is.na(alpha.3))
subsidy_a <- gather(subsidy_a,Year,subsidy_pretax_IMF,-Country,-alpha.3) %>%
select(-Country)
subsidy_b <- read.xlsx('Data/IMF_Fuel_Subsidies_short.xlsx',sheetName='Post-tax',startRow=2,encoding="UTF-8",check.names=FALSE)
ISOs <- read.xlsx('C:/Users/lamw/Documents/SpiderOak Hive/Work/Code/R/.Place names and codes/output/ISOcodes.xlsx',sheetName='alternative_names')
subsidy_b <- left_join(subsidy_b %>% mutate(Country=tolower(Country)),ISOs
,by=c("Country"="alternative.name")) %>%
select(alpha.3,everything()) %>%
filter(!is.na(alpha.3))
subsidy_b <- gather(subsidy_b,Year,subsidy_posttax_IMF,-Country,-alpha.3) %>%
select(-Country)
subsidy <- left_join(subsidy_a,subsidy_b,by=c("alpha.3"="alpha.3","Year"="Year")) %>% mutate(Year=as.numeric(Year))
pe <- left_join(pe,subsidy,by=c("ISO"="alpha.3","Year"="Year"))
############### join SWIID ###############
#load('C:\\Users\\lamw\\Documents\\SpiderOak Hive\\Work\\Code\\R\\Database\\SWIID\\SWIID.RData')
#pe <- left_join(pe,swiid_summary %>% select(ISO,year,gini_disp),by=c("ISO"="ISO","Year"="year"))
#rm(swiid_summary)
############### join regional values surveys ###############
load('Data/WVS.RData')
pe <- left_join(pe,WVS %>% select(ISO,trust_first,trust_last),by=c("ISO"="ISO"))
rm(WVS)
############### join vdem ###############
load('Data/vdem.RData')
pe <- left_join(pe,vdem %>% select(-Country),by=c("ISO"="ISO","Year"="year"))
rm(vdem)
############### join laws ###############
laws <- read.csv('Data/CCLaws.csv',sep=',') %>%
mutate(Country=tolower(Country))
ISOs <- read.xlsx('C:/Users/lamw/Documents/SpiderOak Hive/Work/Code/R/.Place names and codes/output/ISOcodes.xlsx','alternative_names',encoding = 'UTF-8') %>%
mutate(alternative.name=tolower(alternative.name))
laws <- left_join(laws,ISOs %>% select(alternative.name,alpha.3),by=c("Country"="alternative.name")) %>%
select(Country,ISO=alpha.3,everything())
# remove frameworks
# laws <- laws %>%
#   filter(!grepl("Mitigation and adaptation",Framework)) %>%
#   filter(!grepl("mitigation and adaptation",Framework)) %>%
#   filter(!grepl("Mitigation",Framework)) %>%
#   filter(!grepl("Adaptation",Framework)) %>%
#   filter(!grepl("mitigation",Framework))
# remove adaptation only laws
laws <- laws[grep("^Adaptation*$",laws$Framework,invert=TRUE),]
laws <- laws[grep("^(Adaptation)*$",laws$Categories,invert=TRUE),]
laws <- laws[grep("^(Adaptation; Institutions / Administrative arrangements)*$",laws$Categories,invert=TRUE),]
## aggregate
laws <- laws %>%
group_by(Country,ISO) %>%
summarise(laws=n())
save(laws,file='Data/laws.RData')
load('Data/laws.RData')
pe <- left_join(pe,laws %>% ungroup %>% select(-Country),by=c("ISO"="ISO"))
rm(laws)
############### join Gallup ###############
gallup <- read.xlsx('Data/GallupData3.xlsx',sheetName = 'CombinedData')
gallup <- left_join(gallup %>% mutate(Country=tolower(Country)),ISOs,by=c("Country"="alternative.name")) %>%
select(alpha.3,climate_aware = AWARE_C,climate_human = HUMAN_C) %>%
filter(climate_aware!=0,climate_human!=0) %>%
mutate(Year=2008)
pe <- left_join(pe,gallup,by=c("ISO"="alpha.3","Year"="Year"))
save(pe,file='Data/pe.RData')
rm(list=ls())
library(tidyverse)
library(gridExtra)
library(xlsx)
library(zoo)
library(classInt)
library(scales)
library(GGally)
library(ggfortify)
library(knitr)
library(kableExtra)
library(grid)
load('Data/pe.RData')
############### prepare map ###############
library(ggmap)
library(maps)
library(mapdata)
world <- map_data("world") %>%
filter(region != "Antarctica") %>%
mutate(region=tolower(region))
isos <- read.xlsx(file="C:/Users/lamw/Documents/SpiderOak Hive/Work/Code/R/.Place names and codes/output/ISOcodes.xlsx",sheetName="alternative_names",header=TRUE)
names(isos) = c("country","iso")
world <- left_join(world,isos %>% mutate(country=tolower(country)),by=c("region"="country"))
rm(isos)
############### prepare data ###############
### elec shares
pe <- pe %>%
group_by(Country) %>%
mutate(ene_share_coal=ene_coal_tpes_IEA/ene_tot_tpes_IEA) %>%
mutate(ene_share_gas=ene_gas_tpes_IEA/ene_tot_tpes_IEA) %>%
mutate(ene_share_oil=ene_oil_tfec_IEA/ene_tot_tfec_IEA)
### GDP per capita
pe <- pe %>%
group_by(Country) %>%
mutate(gdp_ppp_pc=gdp_ppp_WB/pop_UN) %>%
mutate(co2_terr_pc=co2_terr_GCB/pop_UN)
### subsidies per gdp
pe <- pe %>%
group_by(Country) %>%
mutate(subsidy_pretax_IMF_gdp = subsidy_pretax_IMF/gdp_real_WB) %>%
mutate(subsidy_posttax_IMF_gdp = subsidy_posttax_IMF/gdp_real_WB)
### sum oil and gas resource rents
pe <- pe %>%
group_by(Country) %>%
mutate(rrents_oilgas_WB=rrents_oil_WB+rrents_gas_WB)
##### select variables
vars <- c("co2_terr_pc","laws","subsidy_pretax_IMF_gdp","rrents_oilgas_WB","ene_share_coal","democracy_electoral_vdem","gov_corrupt_WGI","trust_last","climate_aware")
group <- c("dependent","dependent","dependent","interests","interests","institutions","institutions","ideas","ideas")
risk <- cbind(as.data.frame(vars),group) %>%
mutate(vars=as.character(vars))
ch <- pe %>%
select(c("Country","ISO","Year","pop_UN","region_IAM10","region_RCP5",risk$vars)) %>%
filter(Year>=1990)
rm(vars,group)
#### bring data to latest year [DO SOME CHECKS HERE] ####
ch <- ch %>%
group_by(Country) %>%
mutate_at(vars(-group_cols()),funs(na.locf(.,na.rm=FALSE))) %>%
ungroup() %>%
filter(Year==2017) %>%
filter(Country!="World") %>%
filter(pop_UN>1000000)
##### put carbon price gap to 1 if no data ######
# ch <- ch %>%
#   group_by(Country) %>%
#   mutate(carbon_price_gap=ifelse(is.na(carbon_price_gap),1,carbon_price_gap)) %>%
#   ungroup()
#### change the signs on the data 1 is more constrained, 0 is less
# ch <- ch %>%
#   mutate(democracy_electoral_vdem=-democracy_electoral_vdem) %>%
#   mutate(corruption_public_vdem=-corruption_public_vdem) %>%
#   mutate(trust_last=-trust_last)
#### Give nicer names
### histograms ###
gather(ch,key,value,risk$vars) %>%
ggplot(.,aes(x=value)) +
geom_histogram(bins=20) +
facet_wrap(. ~ key,scales="free") +
theme(axis.title = element_blank())
### correlation plots ###
library(ggcorrplot)
corr_data <- round(cor(ch %>% select(risk$vars),method="spearman",use="complete.obs"),2)
ggcorrplot(corr_data,type="upper",
ggtheme = ggplot2::theme_gray,
colors = c("#6D9EC1", "white", "#E46726"),lab=TRUE)
rm(corr_data)
library(cluster)
pc <- ch %>%
filter_at(vars(risk$vars),all_vars(!is.na(.))) %>%
column_to_rownames(var = "Country")
comps <- prcomp(pc %>% select(risk$vars),scale.=TRUE) # calculate principal components; Choose whether to scale
screeplot(comps, type="lines",col=3)
summary_pca <- rbind(
SD = sqrt(comps$sdev^2),
Proportion = comps$sdev^2/sum(comps$sdev^2),
Cumulative = cumsum(comps$sdev^2 / sum(comps$sdev^2))
) %>%
rbind(.,comps$rotation)
kable(summary_pca, format = "html", caption="PCA analysis",digits=2) %>%
kable_styling()
#d_dist <- dist(as.matrix(comps$x[,1:4])) ### look at heirarchical clusters
#plot(hclust(d_dist))
######### scree plot
scree_data <- comps$x[,1:4]
wss <- (nrow(scree_data)-1)*sum(apply(scree_data,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(scree_data,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# clusters <- kmeans(comps$x[,1:3],5); ### choose no. clusters & no. PCs
# pc <- cbind(pc,cluster=clusters$cluster) ### bind clusters to dataset
# pc$cluster <- as.factor(clusters$cluster) ### convert to factor
clusters <- pam(comps$x[,1:5],5)
pc <- cbind(pc,cluster=clusters$cluster) ### bind clusters to dataset
pc$cluster <- as.factor(clusters$cluster) ### convert to factor
rm(clusters,i,wss)
rm(scree_data,summary_pca)
autoplot(comps,loadings=TRUE,loadings.label=TRUE,data=pc,label=TRUE,colour='cluster')
mapdata <- left_join(world,pc %>% select(ISO,cluster),by=c("iso"="ISO"))
mapdata %>%
ggplot(.) +
geom_polygon(aes(long,lat,group = paste(region,group),fill=cluster),color="white") +
theme_void() +
coord_fixed(1) +
scale_fill_discrete() +
labs(title="Typology")
pc <- left_join(pc,pe %>% filter(Year==2017) %>% select(ISO,co2_terr_GCB),by=("ISO"="ISO"))
library(tidyverse)
pc <- left_join(pc,pe %>% filter(Year==2017) %>% select(ISO,co2_terr_GCB),by=("ISO"="ISO"))
world <- pe %>% filter(Year==2017,ISO=="WLD") %>% select(co2_terr_GCB,pop_UN)
blarg <- pc %>%
group_by(cluster) %>%
summarise(co2=sum(co2_terr_GCB),pop=sum(pop_UN),countries=paste(Country,collapse="; ")) %>%
mutate(co2_frac=co2/world$co2_terr_GCB[[1]],pop_frac=pop/world$pop_UN[[1]])
openxlsx::write.xlsx(blarg,"Results/results.xlsx",sheetName="cluster_description",row.names=F)
View(blarg)
pc <- left_join(pc,pe %>% filter(Year==2017) %>% select(ISO,co2_terr_GCB),by=("ISO"="ISO"))
world <- pe %>% filter(Year==2017,ISO=="WLD") %>% select(co2_terr_GCB,pop_UN)
blarg <- pc %>%
group_by(cluster) %>%
summarise(co2=sum(co2_terr_GCB),pop=sum(pop_UN),countries=paste(Country,collapse="; ")) %>%
mutate(co2_frac=co2/world$co2_terr_GCB[[1]],pop_frac=pop/world$pop_UN[[1]])
pc <- left_join(pc,pe %>% filter(Year==2017) %>% select(ISO,co2_terr_GCB),by=("ISO"="ISO"))
world <- pe %>% filter(Year==2017,ISO=="WLD") %>% select(co2_terr_GCB,pop_UN)
blarg <- pc %>%
group_by(cluster) %>%
summarise(co2=sum(co2_terr_GCB),pop=sum(pop_UN),countries=paste(Country,collapse="; ")) %>%
mutate(co2_frac=co2/world$co2_terr_GCB[[1]],pop_frac=pop/world$pop_UN[[1]])
openxlsx::write.xlsx(blarg,"Results/results.xlsx",sheetName="cluster_description",row.names=F)
View(world)
rm(list=ls())
library(tidyverse)
library(gridExtra)
library(xlsx)
library(zoo)
library(classInt)
library(scales)
library(GGally)
library(ggfortify)
library(knitr)
library(kableExtra)
library(grid)
library(ggplot2); theme_set(theme_bw())
load('Data/pe.RData')
############### prepare map ###############
library(ggmap)
library(maps)
library(mapdata)
world <- map_data("world") %>%
filter(region != "Antarctica") %>%
mutate(region=tolower(region))
isos <- read.xlsx(file="C:/Users/lamw/Documents/SpiderOak Hive/Work/Code/R/.Place names and codes/output/ISOcodes.xlsx",sheetName="alternative_names",header=TRUE)
names(isos) = c("country","iso")
world <- left_join(world,isos %>% mutate(country=tolower(country)),by=c("region"="country"))
rm(isos)
############### prepare data ###############
### elec shares
pe <- pe %>%
group_by(Country) %>%
mutate(ene_share_coal=ene_coal_tpes_IEA/ene_tot_tpes_IEA) %>%
mutate(ene_share_gas=ene_gas_tpes_IEA/ene_tot_tpes_IEA) %>%
mutate(ene_share_oil=ene_oil_tfec_IEA/ene_tot_tfec_IEA)
### GDP per capita
pe <- pe %>%
group_by(Country) %>%
mutate(gdp_ppp_pc=gdp_ppp_WB/pop_UN) %>%
mutate(co2_terr_pc=co2_terr_GCB/pop_UN)
### subsidies per gdp
pe <- pe %>%
group_by(Country) %>%
mutate(subsidy_pretax_IMF_gdp = subsidy_pretax_IMF/gdp_real_WB) %>%
mutate(subsidy_posttax_IMF_gdp = subsidy_posttax_IMF/gdp_real_WB)
### sum oil and gas resource rents
pe <- pe %>%
group_by(Country) %>%
mutate(rrents_oilgas_WB=rrents_oil_WB+rrents_gas_WB)
p5 <- ch %>%
filter(pop_UN>1e6) %>%
top_n(-25,climate_aware) %>%
ggplot(.,aes(x=reorder(Country,climate_aware),y=climate_aware)) +
geom_bar(stat='identity',fill="#74a9cf") +
geom_hline(yintercept=mean(ch$climate_aware,na.rm=T),color='#525252',size=1) +
ylab("% of people who are aware of climate change)") +
coord_flip() +
geom_text(aes(x=5,y=mean(ch$climate_aware,na.rm=T)-1.35,label="World Average"),angle=90,color='#252525') +
theme(axis.title.y = element_blank())
p5 <- ch %>%
filter(pop_UN>1e6) %>%
top_n(-25,climate_aware) %>%
ggplot(.,aes(x=reorder(Country,climate_aware),y=climate_aware)) +
geom_bar(stat='identity',fill="#74a9cf") +
geom_hline(yintercept=mean(ch$climate_aware,na.rm=T),color='#525252',size=1) +
ylab("Climate awareness (% of people who are aware of climate change)") +
coord_flip() +
geom_text(aes(x=5,y=mean(ch$climate_aware,na.rm=T)-1.35,label="World Average"),angle=90,color='#252525') +
theme(axis.title.y = element_blank())
