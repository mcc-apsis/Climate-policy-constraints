# boxplots
gather(pc,key,value,risk$vars) %>%
ggplot(.,aes(x=cluster,y=value,fill=cluster)) +
geom_boxplot() +
facet_wrap(key ~.,scales="free",ncol=3) +
theme(axis.title.y = element_blank(),strip.text.y = element_text(size = 10)) +
theme(axis.text.x=element_blank(),axis.title.x = element_blank(),axis.ticks.x = element_blank()) +
theme(legend.position = "bottom",legend.title = element_blank()) +
guides(fill = guide_legend(nrow = 1,label.position = "bottom",keywidth = unit(1.25,"cm")))
rm(list=ls())
library(tidyverse)
library(gridExtra)
library(xlsx)
library(zoo)
library(classInt)
library(scales)
library(GGally)
library(ggfortify)
library(knitr)
library(kableExtra)
library(grid)
load('Data/pe.RData')
############### join SWIID ###############
#load('C:\\Users\\lamw\\Documents\\SpiderOak Hive\\Work\\Code\\R\\Database\\SWIID\\SWIID.RData')
#pe <- left_join(pe,swiid_summary %>% select(ISO,year,gini_disp),by=c("ISO"="ISO","Year"="year"))
#rm(swiid_summary)
############### join regional values surveys ###############
load('Data/WVS.RData')
pe <- left_join(pe,WVS %>% select(ISO,trust_first,trust_last),by=c("ISO"="ISO"))
############### join vdem ###############
load('Data/vdem.RData')
pe <- left_join(pe,vdem %>% select(-Country),by=c("ISO"="ISO","Year"="year"))
rm(vdem)
############### join laws ###############
load('Data/laws.RData')
pe <- left_join(pe,laws %>% ungroup %>% select(-Country),by=c("ISO"="ISO"))
############### prepare map ###############
library(ggmap)
library(maps)
library(mapdata)
world <- map_data("world") %>%
filter(region != "Antarctica") %>%
mutate(region=tolower(region))
isos <- read.xlsx(file="C:/Users/lamw/Documents/SpiderOak Hive/Work/Code/MATLAB/Handy code/ISOcodes.xls",sheetName="3 letter codes",startRow = 3,colIndex=7:8,header=FALSE)
names(isos) = c("country","iso")
isos <- isos %>% mutate(country=tolower(country))
world <- left_join(world,isos,by=c("region"="country"))
rm(isos)
############### prepare data ###############
### elec shares
pe <- pe %>%
group_by(Country) %>%
mutate(ene_share_coal=ene_coal_tpes_IEA/ene_tot_tpes_IEA) %>%
mutate(ene_share_gas=ene_gas_tpes_IEA/ene_tot_tpes_IEA) %>%
mutate(ene_share_oil=ene_oil_tfec_IEA/ene_tot_tfec_IEA)
pe <- pe %>%
group_by(Country) %>%
mutate(gdp_ppp_pc=gdp_ppp_WB/pop_UN) %>%
mutate(co2_terr_pc=co2_terr_GCB/pop_UN)
### sum oil and gas resource rents
pe <- pe %>%
group_by(Country) %>%
mutate(rrents_oilgas_WB=rrents_oil_WB+rrents_gas_WB)
##### select variables
vars <- c("rrents_oilgas_WB","ene_share_coal","democracy_electoral_vdem","corruption_public_vdem","trust_last","laws")
group <- c("interests","interests","institutions","institutions","ideas","dependent")
risk <- cbind(as.data.frame(vars),group) %>%
mutate(vars=as.character(vars))
ch <- pe %>%
select(c("Country","ISO","Year","region_IAM10","region_RCP5",risk$vars,"pop_UN")) %>%
filter(Year>=1990)
rm(vars,group)
#### bring data to latest year [DO SOME CHECKS HERE] ####
ch <- ch %>%
group_by(Country) %>%
mutate_at(vars(-group_cols()),funs(na.locf(.,na.rm=FALSE))) %>%
ungroup() %>%
filter(Year==2015) %>%
filter(Country!="World") %>%
filter(pop_UN>1000000) %>%
select(-pop_UN)
#### change the signs on the data 1 is more constrained, 0 is less
# ch <- ch %>%
#   mutate(democracy_electoral_vdem=-democracy_electoral_vdem) %>%
#   mutate(corruption_public_vdem=-corruption_public_vdem) %>%
#   mutate(trust_last=-trust_last)
mapdata <- left_join(world,ch,by=c("iso"="ISO"))
# reverse direction of WGI indicators, for interpretability
plmaps <- list()
for(i in 1:length(risk$vars)) {
z <-  paste0("paste(", paste0('', c("region", "group"), collapse = ", "), ")")
plmaps[[i]] <- mapdata %>%
ggplot(.,aes_string("long","lat",group=z,fill=risk$vars[[i]])) +
geom_polygon(color="white") +
theme_minimal() +
theme(axis.title = element_blank(),axis.text = element_blank(),panel.border = element_rect(color='grey',fill='NA')) +
xlim(-180,180) +
coord_fixed(1) +
scale_fill_gradient(na.value = 'grey',high = "#132B43", low = "#56B1F7") +
theme(legend.position="bottom")
rm(z)
plot(plmaps[[i]])
}
#blarg <- gather(mapdata,key,value,risk$vars)
#blarg %>%
#  ggplot(.,aes(x=long,y=lat,group = paste(region,group),fill=value)) +
#  geom_polygon(color="white") +
#  facet_wrap(key ~.)+
#  theme_minimal() +
#  theme(axis.title = element_blank(),axis.text = element_blank(),panel.border = element_rect(color='grey',fill='NA')) +
#  xlim(-180,180)
#do.call(grid.arrange,c(plmaps,ncol=1))
summary_vars <- gather(ch,key,value,risk$vars) %>%
group_by(key) %>%
summarise_at("value",funs(n=sum(!is.na(.)),mean=mean(.),min=min(.),max=max(.)),na.rm=TRUE)
#summary_vars$mean[1] <- format(summary_vars$mean[1],digits=3,scientific=FALSE)
kable(summary_vars, format = "html", caption="Summary statistics",digits=1) %>%
kable_styling()
rm(plmaps,summary_vars)
laws <- read.csv('Data/CCLaws.csv',sep=',') %>%
mutate(Country=tolower(Country))
ISOs <- read.xlsx('C:/Users/lamw/Documents/SpiderOak Hive/Work/Code/R/.Place names and codes/output/ISOcodes.xlsx','alternative_names',encoding = 'UTF-8') %>%
mutate(alternative.name=tolower(alternative.name))
laws <- left_join(laws,ISOs %>% select(alternative.name,alpha.3),by=c("Country"="alternative.name")) %>%
select(Country,ISO=alpha.3,everything())
### plot ###
# ISOs2 <- read.xlsx('C:/Users/lamw/Documents/SpiderOak Hive/Work/Code/R/.Place names and codes/output/ISOcodes.xlsx','ISO_master',encoding = 'UTF-8') %>%
#   select(alpha.3,region)
# library(gridExtra)
# laws <- left_join(laws,ISOs2,by=c("ISO"="alpha.3"))
# plots <- list()
#
# plots[[1]] <- laws %>%
#   filter(grepl("Law|Plan|Policy|Strategy",Document.Type)) %>%
#   group_by(Year.Passed,Document.Type) %>%
#   summarise(no.laws=n()) %>%
#   ggplot(.,aes(x=Year.Passed,y=no.laws,fill=Document.Type)) +
#   geom_bar(stat='identity')+
#   xlim(1990,2018)
#
# plots[[2]] <- laws %>%
#   filter(grepl("Law|Plan|Policy|Strategy",Document.Type)) %>%
#   group_by(Year.Passed,region) %>%
#   summarise(no.laws=n()) %>%
#   ggplot(.,aes(x=Year.Passed,y=no.laws,fill=region)) +
#   geom_bar(stat='identity')+
#   xlim(1990,2018)
#
# do.call(grid.arrange,c(plots,ncol=1))
# remove frameworks
# laws <- laws %>%
#   filter(!grepl("Mitigation and adaptation",Framework)) %>%
#   filter(!grepl("mitigation and adaptation",Framework)) %>%
#   filter(!grepl("Mitigation",Framework)) %>%
#   filter(!grepl("Adaptation",Framework)) %>%
#   filter(!grepl("mitigation",Framework))
# remove adaptation only laws
laws <- laws[grep("^Adaptation*$",laws$Framework,invert=TRUE),]
laws <- laws[grep("^(Adaptation)*$",laws$Categories,invert=TRUE),]
laws <- laws[grep("^(Adaptation; Institutions / Administrative arrangements)*$",laws$Categories,invert=TRUE),]
## aggregate
laws <- laws %>%
group_by(Country,ISO) %>%
summarise(laws=n())
save(laws,file='Data/laws.RData')
View(ch)
View(ch)
rm(list=ls())
library(tidyverse)
library(gridExtra)
library(xlsx)
library(zoo)
library(classInt)
library(scales)
library(GGally)
library(ggfortify)
library(knitr)
library(kableExtra)
library(grid)
load('Data/pe.RData')
############### join SWIID ###############
#load('C:\\Users\\lamw\\Documents\\SpiderOak Hive\\Work\\Code\\R\\Database\\SWIID\\SWIID.RData')
#pe <- left_join(pe,swiid_summary %>% select(ISO,year,gini_disp),by=c("ISO"="ISO","Year"="year"))
#rm(swiid_summary)
############### join regional values surveys ###############
load('Data/WVS.RData')
pe <- left_join(pe,WVS %>% select(ISO,trust_first,trust_last),by=c("ISO"="ISO"))
############### join vdem ###############
load('Data/vdem.RData')
pe <- left_join(pe,vdem %>% select(-Country),by=c("ISO"="ISO","Year"="year"))
rm(vdem)
############### join laws ###############
load('Data/laws.RData')
pe <- left_join(pe,laws %>% ungroup %>% select(-Country),by=c("ISO"="ISO"))
############### prepare map ###############
library(ggmap)
library(maps)
library(mapdata)
world <- map_data("world") %>%
filter(region != "Antarctica") %>%
mutate(region=tolower(region))
isos <- read.xlsx(file="C:/Users/lamw/Documents/SpiderOak Hive/Work/Code/MATLAB/Handy code/ISOcodes.xls",sheetName="3 letter codes",startRow = 3,colIndex=7:8,header=FALSE)
names(isos) = c("country","iso")
isos <- isos %>% mutate(country=tolower(country))
world <- left_join(world,isos,by=c("region"="country"))
rm(isos)
############### prepare data ###############
### elec shares
pe <- pe %>%
group_by(Country) %>%
mutate(ene_share_coal=ene_coal_tpes_IEA/ene_tot_tpes_IEA) %>%
mutate(ene_share_gas=ene_gas_tpes_IEA/ene_tot_tpes_IEA) %>%
mutate(ene_share_oil=ene_oil_tfec_IEA/ene_tot_tfec_IEA)
pe <- pe %>%
group_by(Country) %>%
mutate(gdp_ppp_pc=gdp_ppp_WB/pop_UN) %>%
mutate(co2_terr_pc=co2_terr_GCB/pop_UN)
### sum oil and gas resource rents
pe <- pe %>%
group_by(Country) %>%
mutate(rrents_oilgas_WB=rrents_oil_WB+rrents_gas_WB)
##### select variables
vars <- c("rrents_oilgas_WB","ene_share_coal","democracy_electoral_vdem","corruption_public_vdem","trust_last","laws")
group <- c("interests","interests","institutions","institutions","ideas","dependent")
risk <- cbind(as.data.frame(vars),group) %>%
mutate(vars=as.character(vars))
ch <- pe %>%
select(c("Country","ISO","Year","pop_UN","region_IAM10","region_RCP5",risk$vars)) %>%
filter(Year>=1990)
rm(vars,group)
#### bring data to latest year [DO SOME CHECKS HERE] ####
ch <- ch %>%
group_by(Country) %>%
mutate_at(vars(-group_cols()),funs(na.locf(.,na.rm=FALSE))) %>%
ungroup() %>%
filter(Year==2015) %>%
filter(Country!="World") %>%
filter(pop_UN>1000000)
#### change the signs on the data 1 is more constrained, 0 is less
# ch <- ch %>%
#   mutate(democracy_electoral_vdem=-democracy_electoral_vdem) %>%
#   mutate(corruption_public_vdem=-corruption_public_vdem) %>%
#   mutate(trust_last=-trust_last)
mapdata <- left_join(world,ch,by=c("iso"="ISO"))
# reverse direction of WGI indicators, for interpretability
plmaps <- list()
for(i in 1:length(risk$vars)) {
z <-  paste0("paste(", paste0('', c("region", "group"), collapse = ", "), ")")
plmaps[[i]] <- mapdata %>%
ggplot(.,aes_string("long","lat",group=z,fill=risk$vars[[i]])) +
geom_polygon(color="white") +
theme_minimal() +
theme(axis.title = element_blank(),axis.text = element_blank(),panel.border = element_rect(color='grey',fill='NA')) +
xlim(-180,180) +
coord_fixed(1) +
scale_fill_gradient(na.value = 'grey',high = "#132B43", low = "#56B1F7") +
theme(legend.position="bottom")
rm(z)
plot(plmaps[[i]])
}
#blarg <- gather(mapdata,key,value,risk$vars)
#blarg %>%
#  ggplot(.,aes(x=long,y=lat,group = paste(region,group),fill=value)) +
#  geom_polygon(color="white") +
#  facet_wrap(key ~.)+
#  theme_minimal() +
#  theme(axis.title = element_blank(),axis.text = element_blank(),panel.border = element_rect(color='grey',fill='NA')) +
#  xlim(-180,180)
#do.call(grid.arrange,c(plmaps,ncol=1))
summary_vars <- gather(ch,key,value,risk$vars) %>%
group_by(key) %>%
summarise_at("value",funs(n=sum(!is.na(.)),mean=mean(.),min=min(.),max=max(.)),na.rm=TRUE)
#summary_vars$mean[1] <- format(summary_vars$mean[1],digits=3,scientific=FALSE)
kable(summary_vars, format = "html", caption="Summary statistics",digits=1) %>%
kable_styling()
rm(plmaps,summary_vars)
### histograms ###
gather(ch,key,value,risk$vars) %>%
ggplot(.,aes(x=value)) +
geom_histogram(bins=20) +
facet_wrap(. ~ key,scales="free") +
theme(axis.title = element_blank())
### correlation plots ###
library(ggcorrplot)
blarg <- round(cor(ch %>% select(risk$vars),method="spearman",use="complete.obs"),2)
ggcorrplot(blarg,type="upper",
ggtheme = ggplot2::theme_gray,
colors = c("#6D9EC1", "white", "#E46726"),lab=TRUE)
#ch %>%
#  select(risk$vars) %>%
#  ggpairs(progress = FALSE)
library(cluster)
pc <- ch %>%
filter_at(vars(risk$vars),all_vars(!is.na(.))) %>%
column_to_rownames(var = "Country")
comps <- prcomp(pc %>% select(risk$vars),scale.=TRUE) # calculate principal components; Choose whether to scale
screeplot(comps, type="lines",col=3)
summary_pca <- rbind(
SD = sqrt(comps$sdev^2),
Proportion = comps$sdev^2/sum(comps$sdev^2),
Cumulative = cumsum(comps$sdev^2 / sum(comps$sdev^2))
) %>%
rbind(.,comps$rotation)
kable(summary_pca, format = "html", caption="PCA analysis",digits=2) %>%
kable_styling()
#d_dist <- dist(as.matrix(comps$x[,1:4])) ### look at heirarchical clusters
#plot(hclust(d_dist))
######### scree plot
mydata <- comps$x[,1:3]
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# clusters <- kmeans(comps$x[,1:3],5); ### choose no. clusters & no. PCs
# pc <- cbind(pc,cluster=clusters$cluster) ### bind clusters to dataset
# pc$cluster <- as.factor(clusters$cluster) ### convert to factor
clusters <- pam(comps$x[,1:4],5)
pc <- cbind(pc,cluster=clusters$cluster) ### bind clusters to dataset
pc$cluster <- as.factor(clusters$cluster) ### convert to factor
autoplot(comps,loadings=TRUE,loadings.label=TRUE,data=pc,label=TRUE,colour='cluster')
mapdata <- left_join(world,pc,by=c("iso"="ISO"))
mapdata %>%
ggplot(.) +
geom_polygon(aes(long,lat,group = paste(region,group),fill=cluster),color="white") +
theme_void() +
coord_fixed(1) +
scale_fill_discrete() +
labs(title="Typology")
tt <- pe %>%
select(c("Country","ISO","Year","pop_UN","region_IAM10","region_RCP5",risk$vars,"trust_first")) %>%
filter(Country!="World")
#1996 - 2000 average
#2010 - 2014 average
tt <- left_join(tt,pc %>% rownames_to_column(var="Country") %>% select(Country,cluster),by=("Country"="Country"))
tt <- tt %>%
group_by(Country,region_RCP5,cluster) %>%
filter(!is.na(region_RCP5)) %>%
mutate(
gov_corrup_90s=mean(corruption_public_vdem[which(Year>=1995 & Year<=2000)]),
gov_corrup_10s=mean(corruption_public_vdem[which(Year>=2010 & Year<=2014)]),
democracy_90s=mean(democracy_electoral_vdem[which(Year>=1995 & Year<=2000)]),
democracy_10s=mean(democracy_electoral_vdem[which(Year>=2010 & Year<=2014)]),
oilgas_rrents_90s=mean(rrents_oilgas_WB[which(Year>=1995 & Year<=2000)]),
oilgas_rrents_10s=mean(rrents_oilgas_WB[which(Year>=2010 & Year<=2014)]),
coal_90s=mean(ene_share_coal[which(Year>=1995 & Year <=2000)]),
coal_10s=mean(ene_share_coal[which(Year>=2010 & Year <=2013)]),
trust_10s=trust_last,
trust_90s=trust_first);
plots <- list()
plots[[1]] <- tt %>%
ggplot(.,aes(x=gov_corrup_90s,y=gov_corrup_10s,fill=cluster,size=pop_UN)) +
geom_point(pch=21,stroke=0.5,colour="#636363") +
scale_size_continuous(range = c(1,10)) +
geom_abline(intercept=0,slope=1) +
#xlim(-2,2) +
#ylim(-2,2) +
theme(legend.position="none")
plots[[2]] <- tt %>%
ggplot(.,aes(x=democracy_90s,y=democracy_10s,fill=cluster,size=pop_UN)) +
geom_point(pch=21,stroke=0.5,colour="#636363") +
scale_size_continuous(range = c(1,10)) +
geom_abline(intercept=0,slope=1) +
xlim(0,1) +
ylim(0,1) +
theme(legend.position="none")
plots[[3]] <- tt %>%
ggplot(.,aes(x=oilgas_rrents_90s,y=oilgas_rrents_10s,fill=cluster,size=pop_UN)) +
geom_point(pch=21,stroke=0.5,colour="#636363") +
scale_size_continuous(range = c(1,10)) +
geom_abline(intercept=0,slope=1) +
theme(legend.position="none") +
xlim(0,60)+
ylim(0,60)
plots[[4]] <- tt %>%
ggplot(.,aes(x=coal_90s,y=coal_10s,fill=cluster,size=pop_UN)) +
geom_point(pch=21,stroke=0.5,colour="#636363") +
scale_size_continuous(range = c(1,10)) +
geom_abline(intercept=0,slope=1) +
theme(legend.position="none")
plots[[5]] <- tt %>%
ggplot(.,aes(x=trust_90s,y=trust_10s,fill=cluster,size=pop_UN)) +
geom_point(pch=21,stroke=0.5,colour="#636363") +
scale_size_continuous(range = c(1,10)) +
geom_abline(intercept=0,slope=1) +
theme(legend.position="none")+
xlim(0,0.75)+
ylim(0,0.75)
do.call(grid.arrange,c(plots,ncol=2))
#rm(plots,tt)
countries <- pc %>%
rownames_to_column(var="Country") %>%
group_by(cluster) %>%
summarise(countries=paste(Country, collapse=", "))
cluster_summary <- pc %>%
rownames_to_column(var="Country") %>%
group_by(cluster) %>%
summarise_at(vars(risk$vars),mean) %>%
cbind(.,countries=countries$countries) %>%
select(cluster,countries,everything()) %>%
mutate(countries=as.character(countries))
cluster_summary <- cbind(cluster_summary,mediods=rownames(clusters$medoids)) %>%
select(cluster,mediods,countries,everything()) %>%
mutate_at(risk$vars,funs(round(.,2)))
kable(t(cluster_summary), format = "html", caption="blarg",digits=1) %>%
kable_styling() %>%
scroll_box(height = "800px")
# boxplots
gather(pc,key,value,risk$vars) %>%
ggplot(.,aes(x=cluster,y=value,fill=cluster)) +
geom_boxplot() +
facet_wrap(key ~.,scales="free",ncol=3) +
theme(axis.title.y = element_blank(),strip.text.y = element_text(size = 10)) +
theme(axis.text.x=element_blank(),axis.title.x = element_blank(),axis.ticks.x = element_blank()) +
theme(legend.position = "bottom",legend.title = element_blank()) +
guides(fill = guide_legend(nrow = 1,label.position = "bottom",keywidth = unit(1.25,"cm")))
View(cluster_summary)
weighted_cluster_summary <- pc %>%
rownames_to_column(var="Country") %>%
group_by(cluster) %>%
summarise_at(vars(risk$vars),weighted.mean(.,pop_UN))
weighted_cluster_summary <- pc %>%
rownames_to_column(var="Country") %>%
group_by(cluster) %>%
summarise_at(vars(risk$vars), funs(weighted.mean(.,w=pop_UN)))
View(weighted_cluster_summary)
weighted_cluster_summary <- pc %>%
rownames_to_column(var="Country") %>%
group_by(cluster) %>%
summarise_at(vars(risk$vars), funs(weighted.mean(.,w=pop_UN)))%>%
cbind(.,countries=countries$countries) %>%
select(cluster,countries,everything()) %>%
mutate(countries=as.character(countries))
weighted_cluster_summary <- cbind(weighted_cluster_summary,mediods=rownames(clusters$medoids)) %>%
select(cluster,mediods,countries,everything()) %>%
mutate_at(risk$vars,funs(round(.,2)))
kable(t(weighted_cluster_summary), format = "html", caption="blarg",digits=1) %>%
kable_styling() %>%
scroll_box(height = "800px")
library(cluster)
pc <- ch %>%
filter_at(vars(risk$vars),all_vars(!is.na(.))) %>%
column_to_rownames(var = "Country")
comps <- prcomp(pc %>% select(risk$vars),scale.=TRUE) # calculate principal components; Choose whether to scale
screeplot(comps, type="lines",col=3)
summary_pca <- rbind(
SD = sqrt(comps$sdev^2),
Proportion = comps$sdev^2/sum(comps$sdev^2),
Cumulative = cumsum(comps$sdev^2 / sum(comps$sdev^2))
) %>%
rbind(.,comps$rotation)
kable(summary_pca, format = "html", caption="PCA analysis",digits=2) %>%
kable_styling()
#d_dist <- dist(as.matrix(comps$x[,1:4])) ### look at heirarchical clusters
#plot(hclust(d_dist))
######### scree plot
mydata <- comps$x[,1:3]
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# clusters <- kmeans(comps$x[,1:3],5); ### choose no. clusters & no. PCs
# pc <- cbind(pc,cluster=clusters$cluster) ### bind clusters to dataset
# pc$cluster <- as.factor(clusters$cluster) ### convert to factor
clusters <- pam(comps$x[,1:4],5)
pc <- cbind(pc,cluster=clusters$cluster) ### bind clusters to dataset
pc$cluster <- as.factor(clusters$cluster) ### convert to factor
countries <- pc %>%
rownames_to_column(var="Country") %>%
group_by(cluster) %>%
summarise(countries=paste(Country, collapse=", "))
# weighted_cluster_summary <- pc %>%
#   rownames_to_column(var="Country") %>%
#   group_by(cluster) %>%
#   summarise_at(vars(risk$vars), funs(weighted.mean(.,w=pop_UN)))%>%
#   cbind(.,countries=countries$countries) %>%
#   select(cluster,countries,everything()) %>%
#   mutate(countries=as.character(countries))
#
# weighted_cluster_summary <- cbind(weighted_cluster_summary,mediods=rownames(clusters$medoids)) %>%
#   select(cluster,mediods,countries,everything()) %>%
#   mutate_at(risk$vars,funs(round(.,2)))
#
# kable(t(weighted_cluster_summary), format = "html", caption="Cluster stats (pop weighted means)",digits=1) %>%
#    kable_styling() %>%
#    scroll_box(height = "800px")
cluster_summary <- pc %>%
rownames_to_column(var="Country") %>%
group_by(cluster) %>%
summarise_at(vars(risk$vars),mean) %>%
cbind(.,countries=countries$countries) %>%
select(cluster,countries,everything()) %>%
mutate(countries=as.character(countries))
cluster_summary <- cbind(cluster_summary,mediods=rownames(clusters$medoids)) %>%
select(cluster,mediods,countries,everything()) %>%
mutate_at(risk$vars,funs(round(.,2)))
kable(t(cluster_summary), format = "html", caption="Cluster stats (means)",digits=1) %>%
kable_styling() %>%
scroll_box(height = "800px")
# boxplots
gather(pc,key,value,risk$vars) %>%
ggplot(.,aes(x=cluster,y=value,fill=cluster)) +
geom_boxplot() +
facet_wrap(key ~.,scales="free",ncol=3) +
theme(axis.title.y = element_blank(),strip.text.y = element_text(size = 10)) +
theme(axis.text.x=element_blank(),axis.title.x = element_blank(),axis.ticks.x = element_blank()) +
theme(legend.position = "bottom",legend.title = element_blank()) +
guides(fill = guide_legend(nrow = 1,label.position = "bottom",keywidth = unit(1.25,"cm")))
?prcomp
?pam
??pam
